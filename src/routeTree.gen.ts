/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as DocumentationIndexImport } from './routes/documentation/index'
import { Route as DocumentationTablesIndexImport } from './routes/documentation/tables/index'

// Create Virtual Routes

const DocumentationFormsIndexLazyImport = createFileRoute(
  '/documentation/forms/',
)()

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DocumentationIndexRoute = DocumentationIndexImport.update({
  path: '/documentation/',
  getParentRoute: () => rootRoute,
} as any)

const DocumentationFormsIndexLazyRoute =
  DocumentationFormsIndexLazyImport.update({
    path: '/documentation/forms/',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/documentation/forms/index.lazy').then((d) => d.Route),
  )

const DocumentationTablesIndexRoute = DocumentationTablesIndexImport.update({
  path: '/documentation/tables/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/documentation/': {
      id: '/documentation/'
      path: '/documentation'
      fullPath: '/documentation'
      preLoaderRoute: typeof DocumentationIndexImport
      parentRoute: typeof rootRoute
    }
    '/documentation/tables/': {
      id: '/documentation/tables/'
      path: '/documentation/tables'
      fullPath: '/documentation/tables'
      preLoaderRoute: typeof DocumentationTablesIndexImport
      parentRoute: typeof rootRoute
    }
    '/documentation/forms/': {
      id: '/documentation/forms/'
      path: '/documentation/forms'
      fullPath: '/documentation/forms'
      preLoaderRoute: typeof DocumentationFormsIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  DocumentationIndexRoute,
  DocumentationTablesIndexRoute,
  DocumentationFormsIndexLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/documentation/",
        "/documentation/tables/",
        "/documentation/forms/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/documentation/": {
      "filePath": "documentation/index.tsx"
    },
    "/documentation/tables/": {
      "filePath": "documentation/tables/index.tsx"
    },
    "/documentation/forms/": {
      "filePath": "documentation/forms/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
